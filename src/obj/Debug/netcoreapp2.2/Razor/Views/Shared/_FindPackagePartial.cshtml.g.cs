#pragma checksum "C:\Users\luiz.queiroz\Desktop\Code\PackageDelivery\src\Web\PackageDelivery.Web\Views\Shared\_FindPackagePartial.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "14aa3ed8533842010d1c1cb958d1788f14e97018"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared__FindPackagePartial), @"mvc.1.0.view", @"/Views/Shared/_FindPackagePartial.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Shared/_FindPackagePartial.cshtml", typeof(AspNetCore.Views_Shared__FindPackagePartial))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\luiz.queiroz\Desktop\Code\PackageDelivery\src\Web\PackageDelivery.Web\Views\_ViewImports.cshtml"
using PackageDelivery.Web;

#line default
#line hidden
#line 2 "C:\Users\luiz.queiroz\Desktop\Code\PackageDelivery\src\Web\PackageDelivery.Web\Views\_ViewImports.cshtml"
using PackageDelivery.Web.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"14aa3ed8533842010d1c1cb958d1788f14e97018", @"/Views/Shared/_FindPackagePartial.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9c166d737a9e11cb0a3e69d966b2a81eb83a2b4b", @"/Views/_ViewImports.cshtml")]
    public class Views_Shared__FindPackagePartial : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 51, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "14aa3ed8533842010d1c1cb958d1788f14e970183659", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(51, 19758, true);
            WriteLiteral(@"
<script src=""//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/alertify.min.js""></script>
<link rel=""stylesheet"" href=""//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/alertify.min.css"" />
<link rel=""stylesheet"" href=""//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/themes/bootstrap.min.css"" />
<section class=""page-section"">
    <div class=""container"">
        <div class=""row"">
            <div class=""col-lg-8 mx-auto"">
                <div id=""contactForm"">
                    <div class=""control-group"">
                        <div class=""form-group floating-label-form-group controls mb-0 pb-2"">
                            <label>Package code</label>
                            <input class=""form-control"" id=""name"" type=""text"" placeholder=""Package code"" required=""required"" data-validation-required-message=""Please enter the code."" />
                            <p class=""help-block text-danger""></p>
                        </div>
                    </div>
                    <br />
      ");
            WriteLiteral(@"              <div class=""form-group"">
                        <button class=""btn btn-primary btn-xl"" id=""seachButton"" onclick=""searchPackage()"">Find</button>
                        <button class=""btn btn-secondary btn-xl"" id=""seachButton"" data-toggle=""modal"" data-target=""#registermodal"">Register</button>
                        <button class=""btn btn-secondary btn-xl"" id=""seachButton"" data-toggle=""modal"" data-target=""#locationmodal"">Update location</button>
                    </div>
                    <br />
                </div>
            </div>
        </div>
    </div>
</section>

<div class=""modal"" tabindex=""-1"" role=""dialog"" id=""registermodal"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"">Register package</h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
   ");
            WriteLiteral(@"             </button>
            </div>
            <div class=""modal-body"">
                <div class=""control-group"">
                    <div class=""form-group floating-label-form-group controls mb-0 pb-2"">
                        <label>Package code</label>
                        <input class=""form-control"" id=""code"" type=""text"" placeholder=""Package code"" required=""required"" data-validation-required-message=""Please enter your code."" />
                        <p class=""help-block text-danger""></p>
                    </div>
                </div>
                <div class=""control-group"">
                    <div class=""form-group floating-label-form-group controls mb-0 pb-2"">
                        <label>Description</label>
                        <input class=""form-control"" id=""description"" type=""text"" placeholder=""Description"" required=""required"" data-validation-required-message=""Please enter your description."" />
                        <p class=""help-block text-danger""></p>
    ");
            WriteLiteral(@"                </div>
                </div>
                <div class=""control-group"">
                    <div class=""form-group floating-label-form-group controls mb-0 pb-2"">
                        <label>Country</label>
                        <input class=""form-control"" id=""country"" type=""text"" placeholder=""Country"" required=""required"" data-validation-required-message=""Please enter your country."" />
                        <p class=""help-block text-danger""></p>
                    </div>
                </div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Close</button>
                <button type=""button"" class=""btn btn-primary"" onclick=""registerPackage()"">Save changes</button>
            </div>
        </div>
    </div>
</div>


<div class=""modal"" tabindex=""-1"" role=""dialog"" id=""locationmodal"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
    ");
            WriteLiteral(@"        <div class=""modal-header"">
                <h5 class=""modal-title"">Update location</h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body"">
                <div class=""control-group"">
                    <div class=""form-group floating-label-form-group controls mb-0 pb-2"">
                        <label>Package id</label>
                        <input class=""form-control"" id=""packageupdatedid"" type=""text"" placeholder=""Package id"" required=""required"" data-validation-required-message=""Please enter your id."" />
                        <p class=""help-block text-danger""></p>
                    </div>
                </div>
                <div class=""control-group"">
                    <div class=""form-group floating-label-form-group controls mb-0 pb-2"">
                        <label>Latitude</label>
      ");
            WriteLiteral(@"                  <input class=""form-control"" id=""latitude"" type=""text"" placeholder=""Latitude"" required=""required"" data-validation-required-message=""Please enter the latitude."" />
                        <p class=""help-block text-danger""></p>
                    </div>
                </div>
                <div class=""control-group"">
                    <div class=""form-group floating-label-form-group controls mb-0 pb-2"">
                        <label>Longitude</label>
                        <input class=""form-control"" id=""longitude"" type=""text"" placeholder=""Longitude"" required=""required"" data-validation-required-message=""Please enter the longitude."" />
                        <p class=""help-block text-danger""></p>
                    </div>
                </div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Close</button>
                <button type=""button"" class=""btn btn-primary"" onclick=""upd");
            WriteLiteral(@"ateLocation()"">Save changes</button>
            </div>
        </div>
    </div>
</div>

<section class=""page-section"" id=""trackingdiv"">
    <div class=""container"">
        <h2 class=""page-section-heading text-center text-uppercase text-secondary mb-0"">
            Tracking Order No -
            <span id=""packagecode"" class=""text-medium"" style=""padding-left:2px"">-</span>
        </h2>
        <br />
        <h2 class=""page-section-heading text-center text-uppercase text-secondary mb-0"">
            <span id=""packagedescription"" class=""text-medium"" style=""padding-left:2px"">-</span>
        </h2>
        <div class=""divider-custom""></div>
        <!-- Portfolio Grid Items-->
        <div class=""col-lg-8 mx-auto"">
            <div class=""steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x"">
                <div class=""step completed"">
                    <div class=""step-icon-wrap"">
                        <div class=""step-icon""><i class=""pe-7s-n");
            WriteLiteral(@"ext-2""></i></div>
                    </div>
                    <h4 class=""step-title"">Register</h4>
                </div>
                <div class=""step"" id=""stepdispatched"">
                    <div class=""step-icon-wrap"">
                        <div class=""step-icon""><i class=""pe-7s-car""></i></div>
                    </div>
                    <h4 class=""step-title"">Product Dispatched</h4>
                </div>
                <div class=""step"">
                    <div class=""step-icon-wrap"">
                        <div class=""step-icon""><i class=""pe-7s-home""></i></div>
                    </div>
                    <h4 class=""step-title"">Product Delivered</h4>
                </div>
            </div>
        </div>
    </div>
    <div class=""location-map"" id=""location-map"">
        <div style=""width: 600px; height: 800px;"" id=""map_canvas""></div>
    </div>
</section>
<script>
    // hide page element
    function hide(element) {
        element.style.visibility = 'hidde");
            WriteLiteral(@"n';
    }

    // show page element
    function show(element) {
        element.style.visibility = 'visible';
    }

    // register package
    function registerPackage() {
        $.ajax({
            url: ""http://localhost:6543/api/v1/packages/package"",
            type: ""POST"",
            contentType: 'application/json',
            data: JSON.stringify({
                code: document.getElementById('code').value,
                description: document.getElementById('description').value,
                country: document.getElementById('country').value
            }),
            success: function () {
                alertify.notify(""Register completed!"", 'success', 5, function () { console.log(""register completed...""); });

                $(function () {
                    $('#registermodal').modal('toggle');
                });

                $('#code').val('');
                $('#description').val('');
                $('#country').val('');
            },
        ");
            WriteLiteral(@"    error: function (jqXHR, exception) {
                var msg = '';
                if (jqXHR.status === 0) {
                    msg = 'Not connect.\n Verify Network.';
                } else if (jqXHR.status == 404) {
                    msg = 'Requested page not found. [404]';
                } else if (jqXHR.status == 500) {
                    msg = 'Internal Server Error [500].';
                } else if (exception === 'parsererror') {
                    msg = 'Requested JSON parse failed.';
                } else if (exception === 'timeout') {
                    msg = 'Time out error.';
                } else if (exception === 'abort') {
                    msg = 'Ajax request aborted.';
                } else {
                    msg = jqXHR.responseText;
                }

                alertify.notify(""Register failed - "" + msg, 'error', 5, function () { console.log(msg); });
            }
        });
    };

    // update location
    function updateLocation() {
  ");
            WriteLiteral(@"      $.ajax({
            url: ""http://localhost:6543/api/v1/delivery/delivery?packageId="" + document.getElementById('packageupdatedid').value +
                ""&latitude="" + document.getElementById('latitude').value + ""&longitude="" + document.getElementById('longitude').value,
            type: ""POST"",
            contentType: 'application/json',
            success: function () {
                alertify.notify(""Location updated!"", 'success', 5, function () { console.log(""location updated...""); });

                $(function () {
                    $('#locationmodal').modal('toggle');
                });

                $('#packageupdatedid').val('');
                $('#latitude').val('');
                $('#longitude').val('');
            },
            error: function (jqXHR, exception) {
                var msg = '';
                if (jqXHR.status === 0) {
                    msg = 'Not connect.\n Verify Network.';
                } else if (jqXHR.status == 404) {
         ");
            WriteLiteral(@"           msg = 'Requested page not found. [404]';
                } else if (jqXHR.status == 500) {
                    msg = 'Internal Server Error [500].';
                } else if (exception === 'parsererror') {
                    msg = 'Requested JSON parse failed.';
                } else if (exception === 'timeout') {
                    msg = 'Time out error.';
                } else if (exception === 'abort') {
                    msg = 'Ajax request aborted.';
                } else {
                    msg = jqXHR.responseText;
                }

                alertify.notify(""location register failed - "" + msg, 'error', 5, function () { console.log(msg); });
            }
        });
    };

    // search package by code
    function searchPackage() {
        $.ajax({
            url: ""http://localhost:6543/api/v1/packages/package/code?code="" + document.getElementById('name').value,
            type: ""GET"",
            contentType: 'application/json',
            succ");
            WriteLiteral(@"ess: function (data) {
                alertify.notify(""Package found!"", 'success', 5, function () { console.log(""package found...""); });

                $(""#packagecode"").html(data.code);
                $(""#packageuid"").html(data.uid);
                $(""#packagedescription"").html(data.description);

                ValidateLocation(data.uid);
                show(document.getElementById('trackingdiv'));
            },
            error: function (jqXHR, exception) {
                var msg = '';
                if (jqXHR.status === 0) {
                    msg = 'Not connect.\n Verify Network.';
                } else if (jqXHR.status == 404) {
                    msg = 'Requested page not found. [404]';
                } else if (jqXHR.status == 500) {
                    msg = 'Internal Server Error [500].';
                } else if (exception === 'parsererror') {
                    msg = 'Requested JSON parse failed.';
                } else if (exception === 'timeout') {
       ");
            WriteLiteral(@"             msg = 'Time out error.';
                } else if (exception === 'abort') {
                    msg = 'Ajax request aborted.';
                } else {
                    msg = jqXHR.responseText;
                }

                alertify.notify(""Search package failed - "" + msg, 'error', 5, function () { console.log(msg); });
            }
        });
    };

    // retrieve and validate actual location for package
    function ValidateLocation(packageId) {
        $.ajax({
            url: ""http://localhost:6543/api/v1/delivery/delivery/currentLocation?packageId="" + packageId,
            type: ""GET"",
            contentType: 'application/json',
            success: function (data) {
                if (data == null) {
                    $(""#packagelocation"").html(""Not found"");
                }
                else {
                    GetLocationFromGoogleAPI(data.latitude, data.longitude);
                    document.getElementById(""stepdispatched"").className = ");
            WriteLiteral(@"""step completed"";
                    marker(packageId);
                }
            },
            error: function (jqXHR, exception) {
                var msg = '';
                if (jqXHR.status === 0) {
                    msg = 'Not connect.\n Verify Network.';
                } else if (jqXHR.status == 404) {
                    msg = 'Requested page not found. [404]';
                } else if (jqXHR.status == 500) {
                    msg = 'Internal Server Error [500].';
                } else if (exception === 'parsererror') {
                    msg = 'Requested JSON parse failed.';
                } else if (exception === 'timeout') {
                    msg = 'Time out error.';
                } else if (exception === 'abort') {
                    msg = 'Ajax request aborted.';
                } else {
                    msg = jqXHR.responseText;
                }

                alertify.notify(""Validate location failed - "" + msg, 'error', 5, function () { console.l");
            WriteLiteral(@"og(msg); });
            }
        });
    };

    // get location details
    function GetLocationFromGoogleAPI(latitude, longitude) {
        $.ajax({
            url: ""https://maps.googleapis.com/maps/api/geocode/json?key=AIzaSyD-7814D-B9Ok0J_9kvGcyMUGgyCCyQezE&language=pt-br&latlng="" + latitude + "","" + longitude,
            type: ""GET"",
            success: function (data) {
                $(""#packagelocation"").html(data.results[0].formatted_address);
                //initializeGMap(latitude, longitude);
            },
            error: function (jqXHR, exception) {
                var msg = '';
                if (jqXHR.status === 0) {
                    msg = 'Not connect.\n Verify Network.';
                } else if (jqXHR.status == 404) {
                    msg = 'Requested page not found. [404]';
                } else if (jqXHR.status == 500) {
                    msg = 'Internal Server Error [500].';
                } else if (exception === 'parsererror') {
           ");
            WriteLiteral(@"         msg = 'Requested JSON parse failed.';
                } else if (exception === 'timeout') {
                    msg = 'Time out error.';
                } else if (exception === 'abort') {
                    msg = 'Ajax request aborted.';
                } else {
                    msg = jqXHR.responseText;
                }

                alertify.notify(""Location detail failed - "" + msg, 'error', 5, function () { console.log(msg); });
            }
        });
    };

    function marker(packageid) {
        $.ajax({
            url: ""http://localhost:6543/api/v1/delivery/location/"" + packageid + ""/history"",
            type: ""GET"",
            contentType: 'application/json',
            success: function (data) {
                initializeGMap(data[0].latitude, data[0].longitude, data);
            },
            error: function (jqXHR, exception) {
                var msg = '';
                if (jqXHR.status === 0) {
                    msg = 'Not connect.\n Verify");
            WriteLiteral(@" Network.';
                } else if (jqXHR.status == 404) {
                    msg = 'Requested page not found. [404]';
                } else if (jqXHR.status == 500) {
                    msg = 'Internal Server Error [500].';
                } else if (exception === 'parsererror') {
                    msg = 'Requested JSON parse failed.';
                } else if (exception === 'timeout') {
                    msg = 'Time out error.';
                } else if (exception === 'abort') {
                    msg = 'Ajax request aborted.';
                } else {
                    msg = jqXHR.responseText;
                }

                alertify.notify(""Marker failed - "" + msg, 'error', 5, function () { console.log(msg); });
            }
        });
    };

    // initialize google maps
    function initializeGMap(lat, lng, history) {

        var markers = [];
        var coords = [];

        myLatlng = new google.maps.LatLng(lat, lng);

        var myOptions = {
    ");
            WriteLiteral(@"        zoom: 13,
            zoomControl: true,
            center: myLatlng,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };

        map = new google.maps.Map(document.getElementById(""map_canvas""), myOptions);

        $(""#location-map"").css(""width"", ""100%"");
        $(""#map_canvas"").css(""width"", ""100%"");

        for (var i = 1; i < (history.length + 1); i++) {
            var position = new google.maps.LatLng(history[i - 1].latitude, history[i - 1].longitude);
            var marker = new google.maps.Marker({
                position: position,
                title: ""Position "" + i,
                icon: 'assets/img/launch.png',
                map: map
            });

            markers.push(marker);
            coords.push(position);
        }

        var line = new google.maps.Polyline({
            path: coords,
            geodesic: true,
            strokeColor: '#FF0000',
            strokeOpacity: 1.0,
            strokeWeight: 2
        });

  ");
            WriteLiteral(@"      line.setMap(map);
    };

    $(document).ready(function () {
        // hide tracking details
        hide(document.getElementById('trackingdiv'));
    });
</script>
<script src=""https://maps.googleapis.com/maps/api/js?key=AIzaSyD-7814D-B9Ok0J_9kvGcyMUGgyCCyQezE"" async defer></script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
